import requests
import sqlite3
import parser
import line
import schedule, time
import telebot
from multiprocessing.context import Process
import key

bot = telebot.TeleBot(key.tg)


def send_message1():
    matches = line.get_message(0)
    for match in range(len(matches)):
        country, league, team1, team2, time_match, date, t, c, kf = matches[match]
        
        msg = f'''–°–∏–≥–Ω–∞–ª #{match+1} üö®\n{country} {league}\n{team1} - {team2}\n–ù–∞—á–∞–ª–æ –º–∞—Ç—á–∞ {date}\n–°—Ç–∞–≤–∫–∞ - –ò–¢{t}{c}(0,5) –≤ –ø–µ—Ä–≤–æ–º —Ç–∞–π–º–µ\n–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç - {kf}'''
        print(msg)
        bot.send_message('-1001329764588', msg)
        time.sleep(1000)

def send_message2():
    # [['Colombia', 'Primera A', 'Deportivo Cali', 'Deportivo Pasto', '30.03.21', '0', '1', '–ë', '1.86']]
    #matches = line.get_message(0)
    #for match in range(len(matches)):
    #    country, league, team1, team2, date, t, c, kf = matches[match]
    #['Colombia', 'Primera A', 'Independiente Santa Fe', 'Deportivo Pereira', '03.04.21', '03:40', '1', '–ú', '2.19']
    #msgs = f'''–°–∏–≥–Ω–∞–ª #1 üö®\nColumbia Primera A\nIndependiente Santa Fe - Deportivo Pereira \n–ù–∞—á–∞–ª–æ –º–∞—Ç—á–∞ 03:40\n–°—Ç–∞–≤–∫–∞ - –ò–¢1–ú(0,5) –≤ –ø–µ—Ä–≤–æ–º —Ç–∞–π–º–µ\n–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç - 2.19'''

    msg = '''02.04.2021\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∞—Ç—á–µ–π üëá\n–°–∏–≥–Ω–∞–ª #1 , –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç 2.65 ‚ùå\n–°–∏–≥–Ω–∞–ª #2 , –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç 2.06 ‚ùå\n–°–∏–≥–Ω–∞–ª #2 , –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç 2.75 ‚ùå\n–ò—Ç–æ–≥–æ -3.0% (–ø—Ä–∏ —Ñ–ª–µ—Ç–µ 1% –Ω–∞ —Å—Ç–∞–≤–∫—É)'''

    print(msg)
    bot.send_message('-1001270017440', msg)
        #time.sleep(0.5)

# ‚ùå
# ‚úÖ
send_message2()
#schedule.every().day.at("00:21").do(send_message1)
#schedule.every().day.at("00:57").do(parser.aa)
#schedule.every().day.at("00:59").do(parser.aaa)

@bot.message_handler(commands=['start'])
def start_message(message):
    user_id = message.from_user.id
    print(user_id)
    if append_data(user_id):
        bot.send_message(message.chat.id, '–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É')
    else:
        bot.send_message(message.chat.id, '–í—ã —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ —Ä–∞—Å—Å—ã–ª–∫–∏') 

class ScheduleMessage():
    def try_send_schedule():
        while True:
            schedule.run_pending()
            time.sleep(1)
 
    def start_process():
        p1 = Process(target=ScheduleMessage.try_send_schedule, args=())
        p1.start()
 
 
if __name__ == '__main__':
    ScheduleMessage.start_process()
    try:
        bot.polling(none_stop=True)
    except:
        pass